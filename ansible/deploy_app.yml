- name: Deploy sample app to Kubernetes
  hosts: localhost
  gather_facts: false
  vars_files:
    - group_vars/all.yml
  collections:
    - kubernetes.core

  tasks:
    - name: Ensure namespace exists
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ k8s_namespace }}"

    - name: Apply Deployment
      kubernetes.core.k8s:
        state: present
        namespace: "{{ k8s_namespace }}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ deployment_name }}"
          spec:
            replicas: "{{ replicas }}"
            selector:
              matchLabels: { app: "{{ deployment_name }}" }
            template:
              metadata:
                labels: { app: "{{ deployment_name }}" }
              spec:
                containers:
                  - name: "{{ container_name }}"
                    image: "{{ image }}"
                    ports: [{ containerPort: 80 }]

    - name: Apply Service
      kubernetes.core.k8s:
        state: present
        namespace: "{{ k8s_namespace }}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ deployment_name }}"
          spec:
            selector: { app: "{{ deployment_name }}" }
            ports:
              - name: http
                port: 80
                targetPort: 80

    - name: Apply Ingress (nginx)
      kubernetes.core.k8s:
        state: present
        namespace: "{{ k8s_namespace }}"
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: "{{ deployment_name }}-ingress"
            annotations:
              kubernetes.io/ingress.class: nginx
          spec:
            rules:
              - http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: "{{ deployment_name }}"
                          port: { number: 80 }

    - name: Apply HPA
      kubernetes.core.k8s:
        state: present
        namespace: "{{ k8s_namespace }}"
        definition:
          apiVersion: autoscaling/v2
          kind: HorizontalPodAutoscaler
          metadata:
            name: "{{ deployment_name }}"
          spec:
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: "{{ deployment_name }}"
            minReplicas: "{{ min_replicas }}"
            maxReplicas: "{{ max_replicas }}"
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  target:
                    type: Utilization
                    averageUtilization: "{{ cpu_target }}"
