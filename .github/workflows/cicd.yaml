name: build-and-deploy

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

# Global env (simple strings only)
env:
  K8S_NAMESPACE: demo
  CREATE_PULL_SECRET: "false"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_sha: ${{ steps.compute.outputs.image_sha }}
      owner_lc:  ${{ steps.compute.outputs.owner_lc }}
      repo_lc:   ${{ steps.compute.outputs.repo_lc }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute lowercase owner/repo (GHCR requires lowercase)
        id: compute
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_LC=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT
          echo "repo_lc=$REPO_LC"   >> $GITHUB_OUTPUT
          echo "image_sha=ghcr.io/$OWNER_LC/$REPO_LC:${{ github.sha }}" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.compute.outputs.owner_lc }}/${{ steps.compute.outputs.repo_lc }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      # ðŸ‘‡ set directly; don't try env.K8S_NAMESPACE here
      K8S_NAMESPACE: demo
      KUBECONFIG: $HOME/.kube/config
      IMAGE_SHA: ${{ needs.build-and-push.outputs.image_sha }}
    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-kubectl@v4
        with:
          version: v1.29.6

      - name: Write kubeconfig from base64 secret
        shell: bash
        run: |
          mkdir -p "$HOME/.kube"
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"
          echo -n "Bytes in kubeconfig: "; wc -c < "$HOME/.kube/config"
          kubectl config view --minify
          kubectl cluster-info

      - name: Ensure namespace exists
        run: |
          kubectl get ns "$K8S_NAMESPACE" >/dev/null 2>&1 || kubectl create ns "$K8S_NAMESPACE"

      - name: Create GHCR imagePullSecret (optional)
        if: env.CREATE_PULL_SECRET == 'true'
        run: |
          kubectl -n "$K8S_NAMESPACE" delete secret ghcr-pull >/dev/null 2>&1 || true
          kubectl -n "$K8S_NAMESPACE" create secret docker-registry ghcr-pull \
            --docker-server=ghcr.io \
            --docker-username="${{ github.actor }}" \
            --docker-password="${{ secrets.GITHUB_TOKEN }}"

      - name: Apply manifests
        run: kubectl apply -n "$K8S_NAMESPACE" -f k8s/

      - name: Patch deployment to current image (commit SHA)
        run: |
          # change names if needed
          DEPLOYMENT_NAME=sample-nginx
          CONTAINER_NAME=sample-nginx
          kubectl -n "$K8S_NAMESPACE" set image deployment/"$DEPLOYMENT_NAME" "$CONTAINER_NAME"="$IMAGE_SHA"

      - name: Wait for rollout
        run: |
          kubectl -n "$K8S_NAMESPACE" rollout status deployment/sample-nginx --timeout=5m

