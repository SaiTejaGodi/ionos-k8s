deploy:
  needs: build-and-push
  runs-on: ubuntu-latest
  env:
    K8S_NAMESPACE: demo
  steps:
    - uses: actions/checkout@v4

    - uses: azure/setup-kubectl@v4

    - name: Write kubeconfig
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        mkdir -p $HOME/.kube
        printf "%s" "$KUBE_CONFIG" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
        echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

    - name: Sanity check cluster access
      run: |
        kubectl config current-context
        kubectl cluster-info

    - name: Ensure namespace exists
      run: |
        kubectl get ns "${K8S_NAMESPACE}" >/dev/null 2>&1 || \
        kubectl create ns "${K8S_NAMESPACE}"

    # (Optional) create GHCR pull secret if needed
    - name: (Optional) Create GHCR imagePullSecret
      if: env.CREATE_PULL_SECRET == 'true'
      env:
        GHCR_USERNAME: ${{ github.actor }}
        GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        kubectl -n "${K8S_NAMESPACE}" get secret ghcr-pull >/dev/null 2>&1 || \
        kubectl -n "${K8S_NAMESPACE}" create secret docker-registry ghcr-pull \
          --docker-server=ghcr.io \
          --docker-username="$GHCR_USERNAME" \
          --docker-password="$GHCR_TOKEN"

    - name: Apply manifests (root-level files)
      run: |
        kubectl -n "${K8S_NAMESPACE}" apply -f hello-deployment.yaml
        kubectl -n "${K8S_NAMESPACE}" apply -f hello-service.yaml
        kubectl -n "${K8S_NAMESPACE}" apply -f hello-ingress.yaml

    - name: Patch deployment to new image tag (commit SHA)
      env:
        IMAGE: ghcr.io/${{ github.repository_owner }}/ionos-k8s
        SHA: ${{ github.sha }}
      run: |
        IMAGE=$(echo "$IMAGE" | tr '[:upper:]' '[:lower:]')
        CONTAINER=$(kubectl -n "${K8S_NAMESPACE}" get deploy hello -o jsonpath='{.spec.template.spec.containers[0].name}')
        kubectl -n "${K8S_NAMESPACE}" set image deployment/hello "$CONTAINER=${IMAGE}:${SHA}"

    - name: Wait for rollout
      run: kubectl -n "${K8S_NAMESPACE}" rollout status deployment/hello --timeout=120s

